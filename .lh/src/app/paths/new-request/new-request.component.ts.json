{
    "sourceFile": "src/app/paths/new-request/new-request.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733010088532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733010088532,
            "name": "Commit-0",
            "content": "import { Component , OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport { tap, catchError, of, throwError } from 'rxjs';\r\nimport { AppService } from '../../app.service';\r\nimport { ApiDetailsService } from '../../api-details.service';\r\n\r\ninterface Item {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-new-request',\r\n  templateUrl: './new-request.component.html',\r\n  styleUrl: './new-request.component.css'\r\n})\r\nexport class NewRequestComponent implements OnInit {\r\n\r\n  newRequest: FormGroup = new FormGroup({});\r\n  merchantID: string | null = null;\r\n  merchantExist: boolean | null = null;\r\n  user: any;\r\n  fullname: string = '';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private userAccount: AppService,\r\n    private apiService: ApiDetailsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const state = this.router.lastSuccessfulNavigation?.extras.state;\r\n  if (state) {\r\n    console.log(state['newdata']);\r\n\r\n    const merchantItem = state['newdata'].tabs[0].items.find((item: Item) => item.label === 'Merchant ID');\r\n    this.merchantID = merchantItem ? merchantItem.value : null;\r\n    console.log(this.merchantID);\r\n  }\r\n\r\n  this.user = this.userAccount.getUser();\r\n  this.fullname = this.user.user.firstname + ' '+ this.user.user.surname\r\n\r\n  this.newRequest = this.formBuilder.group({\r\n        officer_name: [this.fullname],\r\n        MerchantID: [this.merchantID || ''],\r\n        No_of_POS_terminal: ['', Validators.required],\r\n        location_of_terminal: ['', Validators.required],\r\n        contact_person: ['', Validators.required],\r\n        contact_mobile_no: ['', Validators.required],\r\n        Business_Category: ['', Validators.required],\r\n        bank: ['', Validators.required],\r\n        Account_No: ['', Validators.required],\r\n        CardType: ['', Validators.required],\r\n        Notes: ['']\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    console.log('Form validity:', this.newRequest.valid);\r\n    console.log('Form data:', this.newRequest.value)\r\n    \r\n    if (this.newRequest.valid) {\r\n      const requestData = this.newRequest.value; \r\n  \r\n      this.apiService.newRequest(requestData).subscribe(response => {\r\n        console.log(response);\r\n        console.log('Request added');\r\n        this.router.navigate(['/request']);\r\n      }, error => {\r\n        console.log('POST request failed, error:', error);\r\n      });\r\n    } else {\r\n      console.log(this.newRequest.errors);\r\n    }\r\n  }\r\n\r\n  searchMerchant(){\r\n    const merchant = this.newRequest.get('MerchantID')?.value;\r\n\r\n    this.http.get(`$/${merchant}`).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.merchantExist = true;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        this.merchantExist = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  resetMerchant(){\r\n    this.merchantExist = null;\r\n  }\r\n}\r\n"
        }
    ]
}